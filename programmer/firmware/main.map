Archive member included because of file (symbol)

/usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_exit.o)
                              /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_copy_data.o)
                              usbdrv/usbdrv.o (__do_copy_data)
/usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_clear_bss.o)
                              usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv/usbdrv.o
usbDeviceAddr       0x1               usbdrv/usbdrv.o
usbRxToken          0x1               usbdrv/usbdrv.o
usbInputBufOffset   0x1               usbdrv/usbdrv.o
ispTransmit         0x2               isp.o
usbMsgPtr           0x2               usbdrv/usbdrv.o
usbRxLen            0x1               usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               usbdrv/usbdrv.o
usbCurrentTok       0x1               usbdrv/usbdrv.o
usbConfiguration    0x1               usbdrv/usbdrv.o
usbRxBuf            0x16              usbdrv/usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/crtm8.o
Address of section .BOOTSTART set to 0x800060
Address of section .data set to 0x800064
Address of section .BOOTFLASHSTART set to 0x17ff
LOAD usbdrv/usbdrv.o
LOAD usbdrv/usbdrvasm.o
LOAD usbdrv/oddebug.o
LOAD isp.o
LOAD clock.o
LOAD main.o
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/libc.a
LOAD /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xdce
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000026       0x52 usbdrv/usbdrv.o
                0x00000026                usbDescriptorString0
                0x0000002a                usbDescriptorStringVendor
                0x00000046                usbDescriptorStringDevice
                0x00000054                usbDescriptorDevice
                0x00000066                usbDescriptorConfiguration
                0x00000078                . = ALIGN (0x2)
                0x00000078                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000078        0x0 linker stubs
 *(.trampolines*)
                0x00000078                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000078                __ctors_start = .
 *(.ctors)
                0x00000078                __ctors_end = .
                0x00000078                __dtors_start = .
 *(.dtors)
                0x00000078                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000078        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/crtm8.o
                0x00000078                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000078        0xc /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000084       0x16 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_copy_data.o)
                0x00000084                __do_copy_data
 .init4         0x0000009a       0x10 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_clear_bss.o)
                0x0000009a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000aa        0x4 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000ae        0x2 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/crtm8.o
                0x000000ae                __vector_12
                0x000000ae                __bad_interrupt
                0x000000ae                __vector_6
                0x000000ae                __vector_3
                0x000000ae                __vector_11
                0x000000ae                __vector_13
                0x000000ae                __vector_17
                0x000000ae                __vector_7
                0x000000ae                __vector_5
                0x000000ae                __vector_4
                0x000000ae                __vector_9
                0x000000ae                __vector_2
                0x000000ae                __vector_15
                0x000000ae                __vector_8
                0x000000ae                __vector_14
                0x000000ae                __vector_10
                0x000000ae                __vector_16
                0x000000ae                __vector_18
 .text          0x000000b0      0x264 usbdrv/usbdrv.o
                0x000000b0                usbInit
                0x000000be                usbPoll
 .text          0x00000314      0x2ea usbdrv/usbdrvasm.o
                0x00000314                usbCrc16
                0x00000346                usbCrc16Append
                0x0000034e                __vector_1
 .text          0x000005fe        0x0 usbdrv/oddebug.o
 .text          0x000005fe      0x370 isp.o
                0x000005fe                spiHWenable
                0x00000608                ispSetSCKOption
                0x00000620                ispDelay
                0x0000062c                ispConnect
                0x00000666                ispDisconnect
                0x00000676                ispTransmit_sw
                0x000006b2                ispTransmit_hw
                0x000006bc                ispEnterProgrammingMode
                0x00000746                ispReadFlash
                0x000007ae                ispReadEEPROM
                0x000007ea                ispWriteEEPROM
                0x00000832                ispFlushPage
                0x000008c8                ispWriteFlash
 .text          0x0000096e       0x18 clock.o
                0x0000096e                clockWait
 .text          0x00000986      0x444 main.o
                0x00000986                main
                0x000009d2                usbFunctionWrite
                0x00000af4                usbFunctionRead
                0x00000b7e                usbFunctionSetup
 .text          0x00000dca        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_exit.o)
 .text          0x00000dca        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_copy_data.o)
 .text          0x00000dca        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_clear_bss.o)
                0x00000dca                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000dca        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000dca        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000dca        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_clear_bss.o)
                0x00000dca                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000dca        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_exit.o)
                0x00000dca                exit
                0x00000dca                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000dca        0x4 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000dce                _etext = .

.data           0x00800064        0x2 load address 0x00000dce
                0x00800064                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800064        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800064        0x2 usbdrv/usbdrv.o
                0x00800064                usbMsgLen
                0x00800065                usbTxLen
 .data          0x00800066        0x0 usbdrv/usbdrvasm.o
 .data          0x00800066        0x0 usbdrv/oddebug.o
 .data          0x00800066        0x0 isp.o
 .data          0x00800066        0x0 clock.o
 .data          0x00800066        0x0 main.o
 .data          0x00800066        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_exit.o)
 .data          0x00800066        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_copy_data.o)
 .data          0x00800066        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800066                . = ALIGN (0x2)
                0x00800066                _edata = .
                0x00800066                PROVIDE (__data_end, .)

.bss            0x00800066       0x41
                0x00800066                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800066        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800066        0x1 usbdrv/usbdrv.o
 .bss           0x00800067        0x0 usbdrv/usbdrvasm.o
 .bss           0x00800067        0x0 usbdrv/oddebug.o
 .bss           0x00800067        0x0 isp.o
 .bss           0x00800067        0x0 clock.o
 .bss           0x00800067       0x14 main.o
 .bss           0x0080007b        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_exit.o)
 .bss           0x0080007b        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_copy_data.o)
 .bss           0x0080007b        0x0 /usr/local/avr/lib/gcc/avr/4.3.4/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080007b       0x2a usbdrv/usbdrv.o
                0x0080007b                usbTxBuf
                0x00800086                usbDeviceAddr
                0x00800087                usbRxToken
                0x00800088                usbInputBufOffset
                0x00800089                usbMsgPtr
                0x0080008b                usbRxLen
                0x0080008c                usbNewDeviceAddr
                0x0080008d                usbCurrentTok
                0x0080008e                usbConfiguration
                0x0080008f                usbRxBuf
 COMMON         0x008000a5        0x2 isp.o
                0x008000a5                ispTransmit
                0x008000a7                PROVIDE (__bss_end, .)
                0x00000dce                __data_load_start = LOADADDR (.data)
                0x00000dd0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000a7        0x0
                0x008000a7                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000a7                PROVIDE (__noinit_end, .)
                0x008000a7                _end = .
                0x008000a7                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6b4
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/crtm8.o

.stabstr        0x00000000       0x70
 *(.stabstr)
 .stabstr       0x00000000       0x70 /usr/local/avr/lib/gcc/avr/4.3.4/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.bin elf32-avr)
LOAD linker stubs

.BOOTSTART      0x00800060        0x4
 .BOOTSTART     0x00800060        0x4 main.o
                0x00800060                bootStart

.BOOTFLASHSTART
                0x000017ff        0x0
